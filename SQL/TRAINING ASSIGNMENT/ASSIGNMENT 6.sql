CREATE TABLE EMPLOYEE(
EMPLOYEE_ID INT,
FIRST_NAME VARCHAR(20),
LAST_NAME VARCHAR(20),
SALARY INT,
JOINING_DATE DATE,
DEPARTMENT VARCHAR(20))

CREATE TABLE EMPLOYEE_BONUS(
EMPLOYEE_REF_ID INT,
BONUS INT,
BONOUS_DATE DATE
)
CREATE TABLE EMPLOYEE_TITLE(
EMPLOYEE_REF_ID INT,
EMPLOYEE_TITLE VARCHAR(20),
AFFECTIVE_DATE DATE
)
--INSERTING VALUES INTO EMPLOYEE TABLE
INSERT INTO EMPLOYEE VALUES(1,'Anika','Arora',100000,'2020-02-14 9:00:00','HR')
INSERT INTO EMPLOYEE VALUES(2,'Veena','Verma',80000,'2011-06-15 9:00:00','Admin')
INSERT INTO EMPLOYEE VALUES(3,'Vishal','Singhal',300000,'2020-06-16 9:00:00','HR')
INSERT INTO EMPLOYEE VALUES(4,'Sushanth','Singh',500000,'2020-02-17 9:00:00','Admin')
INSERT INTO EMPLOYEE VALUES(5,'Bhupal','Bhati',500000,'2011-06-18 9:00:00','Admin')
INSERT INTO EMPLOYEE VALUES(6,'Dheeraj','Diwan',200000,'2011-06-19 9:00:00','Account')
INSERT INTO EMPLOYEE VALUES(7,'Karan','Kumar',75000,'2020-01-14 9:00:00','Account')
INSERT INTO EMPLOYEE VALUES(8,'Chandrika','Chauhan',90000,'2011-04-15 9:00:00','Admin')
--INSERRTING VALUES INTO EMPLOYEE BONUS TABLE
INSERT INTO EMPLOYEE_BONUS VALUES(1,5000,'2020-02-16 0:00:00')
INSERT INTO EMPLOYEE_BONUS VALUES(2,3000,'2011-06-16 0:00:00')
INSERT INTO EMPLOYEE_BONUS VALUES(3,4000,'2020-02-16 0:00:00')
INSERT INTO EMPLOYEE_BONUS VALUES(1,4500,'2020-02-16 0:00:00')
INSERT INTO EMPLOYEE_BONUS VALUES(2,3500,'2011-02-16 0:00:00')
--INSERTING VALUES INTO EMPLOYEE TITLE TABLE 
INSERT INTO EMPLOYEE_TITLE VALUES(1,'Manager','2016-02-20 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(2,'Executive','2016-02-16 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(8,'Executive','2016-02-16 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(5,'Manager','2016-02-16 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(4,'Asst. Manager','2016-02-16 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(7,'Executive','2016-02-16 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(6,'Lead','2016-02-16 0:00:00')
INSERT INTO EMPLOYEE_TITLE VALUES(3,'lead','2016-02-16 0:00:00')

--1 DISPLAY THE “FIRST_NAME” FROM EMPLOYEE TABLE USING THE ALIAS NAME AS EMPLOYEE_NAME.
SELECT FIRST_NAME AS EMPLOYEE_NAME
FROM EMPLOYEE;

--2 DISPLAY “LAST_NAME” FROM EMPLOYEE TABLE IN UPPER CASE.
SELECT UPPER(LAST_NAME) AS UPPER_LAST_NAME
FROM EMPLOYEE;

--3 DISPLAY UNIQUE VALUES OF DEPARTMENT FROM EMPLOYEE TABLE.
SELECT DISTINCT DEPARTMENT
FROM EMPLOYEE;

--4 DISPLAY THE FIRST THREE CHARACTERS OF LAST_NAME FROM EMPLOYEE TABLE.
SELECT SUBSTRING(LAST_NAME, 1, 3) AS FIRST_THREE_CHARACTERS_LAST_NAME
FROM EMPLOYEE;

--5 DISPLAY THE UNIQUE VALUES OF DEPARTMENT FROM EMPLOYEE TABLE AND PRINTS ITS LENGTH.
SELECT DISTINCT DEPARTMENT, LEN(DEPARTMENT) AS DEPARTMENT_LENGTH
FROM EMPLOYEE;

--6 DISPLAY THE FIRST_NAME AND LAST_NAME FROM EMPLOYEE TABLE INTO A SINGLE COLUMN AS FULL_NAME.  A SPACE CHAR SHOULD SEPARATE THEM.
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME
FROM EMPLOYEE;

--7 DISPLAY ALL EMPLOYEE DETAILS FROM THE EMPLOYEE TABLE ORDER BY FIRST_NAME ASCENDING.
SELECT *
FROM EMPLOYEE
ORDER BY FIRST_NAME ASC;

--8. DISPLAY ALL EMPLOYEE DETAILS ORDER BY FIRST_NAME ASCENDING AND DEPARTMENT DESCENDING.
SELECT *
FROM EMPLOYEE
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

--9 DISPLAY DETAILS FOR EMPLOYEE WITH THE FIRST NAME AS “VEENA” AND “KARAN” FROM EMPLOYEE TABLE.
SELECT *
FROM EMPLOYEE
WHERE FIRST_NAME IN ('VEENA', 'KARAN');

--10 DISPLAY DETAILS OF EMPLOYEE WITH DEPARTMENT NAME AS “ADMIN”.
SELECT *
FROM EMPLOYEE
WHERE DEPARTMENT = 'ADMIN';

--11 DISPLAY DETAILS OF THE EMPLOYEES WHOSE FIRST_NAME CONTAINS ‘V’.
SELECT *
FROM EMPLOYEE
WHERE FIRST_NAME LIKE '%V%';

--12 DISPLAY DETAILS OF THE EMPLOYEES WHOSE SALARY LIES BETWEEN 100000 AND 500000.
SELECT *
FROM EMPLOYEE
WHERE SALARY BETWEEN 100000 AND 500000;

--13 DISPLAY DETAILS OF THE EMPLOYEES WHO HAVE JOINED IN FEB-2020.
SELECT *
FROM EMPLOYEE
WHERE FORMAT(JOINING_DATE,'MMM-YYYY') = 'FEB-2020';

--14 DISPLAY EMPLOYEE NAMES WITH SALARIES >= 50000 AND <= 100000.
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEE
WHERE SALARY BETWEEN 50000 AND 100000;

--15 DISPLAY THE NUMBER OF EMPLOYEES FOR EACH DEPARTMENT IN THE DESCENTING ORDER.
SELECT DEPARTMENT, COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEE
GROUP BY DEPARTMENT
ORDER BY EMPLOYEE_COUNT DESC;

--16 DISPLAY DETAILS OF THE EMPLOYEES WHO ARE ALSO MANAGERS.
SELECT *
FROM EMPLOYEE
WHERE EMPLOYEE_ID IN (SELECT DISTINCT EMPLOYEE_ID FROM EMPLOYEE_TITLE WHERE EMPLOYEE_TITLE = 'MANAGER');

--17 DISPLAY DUPLICATE RECORDS HAVING MATCHING DATA IN SOME FIELDS OF ATABLE.
SELECT DEPARTMENT, COUNT(*) AS DUPLICATE_COUNT
FROM EMPLOYEE
GROUP BY DEPARTMENT
HAVING COUNT(*) > 1;

--18 DISPLAY ONLY ODD ROWS FROM A TABLE.
SELECT *
FROM (
  SELECT *, ROW_NUMBER() OVER(ORDER BY SALARY) AS ROW_NUM
  FROM EMPLOYEE
) AS TEMP
WHERE ROW_NUM % 2 = 1;

--19 CLONE A NEW TABLE FROM EMPLOYEE TABLE. CREATE TABLE NEW_EMPLOYEE AS
SELECT * INTO NEW_EMPLOYEE
FROM EMPLOYEE;

--20 DISPLAY THE TOP 2 HIGHEST SALARY FROM A TABLE.
SELECT TOP 2 *
FROM EMPLOYEE
ORDER BY SALARY DESC;

--21. DISPLAY THE LIST OF EMPLOYEES WITH THE SAME SALARY.
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY IN (SELECT SALARY FROM EMPLOYEE GROUP BY SALARY HAVING COUNT(*) > 1);

--22 DISPLAY THE SECOND HIGHEST SALARY FROM A TABLE.
WITH HIGHEST
AS
(SELECT DENSE_RANK() OVER (ORDER BY SALARY) AS POSITION, SALARY FROM EMPLOYEE)
SELECT SALARY FROM HIGHEST WHERE POSITION=6

--23 DISPLAY THE FIRST 50% RECORDS FROM A TABLE.
SELECT TOP 50 PERCENT *
FROM EMPLOYEE;

--24. DISPLAY THE DEPARTMENTS THAT HAVE LESS THAN 4 PEOPLE IN IT.
SELECT DEPARTMENT, COUNT(*) AS E
FROM EMPLOYEE
GROUP BY DEPARTMENT
HAVING COUNT(*)< 4;

--25. DISPLAY ALL DEPARTMENTS ALONG WITH THE NUMBER OF PEOPLE IN THERE.
SELECT DEPARTMENT, COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEE
GROUP BY DEPARTMENT;

--26 DISPLAY THE NAME OF EMPLOYEES HAVING THE HIGHEST SALARY IN EACH DEPARTMENT.
SELECT E.DEPARTMENT, E.FIRST_NAME, E.LAST_NAME, E.SALARY
FROM EMPLOYEE E
INNER JOIN (
    SELECT DEPARTMENT, MAX(SALARY) AS MAX_SALARY
    FROM EMPLOYEE
    GROUP BY DEPARTMENT
) MAX_SAL ON E.DEPARTMENT = MAX_SAL.DEPARTMENT AND E.SALARY = MAX_SAL.MAX_SALARY;

--27 DISPLAY THE NAMES OF EMPLOYEES WHO EARN THE HIGHEST SALARY. 
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEE
WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE);

--28 DIPLAY THE AVERAGE SALARIES FOR EACH DEPARTMENT
SELECT DEPARTMENT, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEE
GROUP BY DEPARTMENT;

--29 DISPLAY THE NAME OF THE EMPLOYEE WHO HAS GOT MAXIMUM BONUS
SELECT E.FIRST_NAME, E.LAST_NAME
FROM EMPLOYEE E
JOIN EMPLOYEE_BONUS EB ON E.EMPLOYEE_ID = EB.EMPLOYEE_REF_ID
WHERE EB.BONUS = (SELECT MAX(BONUS) FROM EMPLOYEE_BONUS);

--30 DISPLAY THE FIRST NAME AND TITLE OF ALL THE EMPLOYEES --
SELECT E.FIRST_NAME, ET.EMPLOYEE_TITLE
FROM EMPLOYEE E
JOIN EMPLOYEE_TITLE ET ON E.EMPLOYEE_ID = ET.EMPLOYEE_REF_ID;
