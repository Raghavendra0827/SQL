DROP DATABASE IF EXISTS MODULE_1
GO
CREATE DATABASE MODULE_1
GO
USE [MODULE_1]
GO
CREATE TABLE STUDIES (
    PACKAGEID INT PRIMARY KEY,
    PACKAGENAME VARCHAR(50),
    LANGUAGE VARCHAR(50),
    SELLINGCOST DECIMAL(10, 2),
    DEVELOPMENTCOST DECIMAL(10, 2),
    DEVELOPMENTSTATUS VARCHAR(50),
	AUTHOR VARCHAR(20)
);

CREATE TABLE PROGRAMMER (
    PROGRAMMERID INT,
    PROGRAMMERNAME VARCHAR(50),
    AGE INT,
    DATEOFBIRTH DATE,
    COURSE VARCHAR(50),
    LANGUAGESKNOWN VARCHAR(100),
    GENDER VARCHAR(10),
    SOFTWAREID INT,
    CONSTRAINT PK_PROGRAMMER PRIMARY KEY (PROGRAMMERID),
    CONSTRAINT FK_PROGRAMMER_SOFTWARE FOREIGN KEY (SOFTWAREID) REFERENCES STUDIES(PACKAGEID)
);
-- INSERTING DATA INTO STUDIES TABLE
INSERT INTO STUDIES (PACKAGEID, PACKAGENAME, LANGUAGE, SELLINGCOST, DEVELOPMENTCOST, DEVELOPMENTSTATUS,AUTHOR)
VALUES
    (1, 'PACKAGE1', 'PASCAL', 100.00, 150.00, 'COMPLETED','SWAMY'),
    (2, 'PACKAGE2', 'C', 200.00, 180.00, 'COMPLETED','JOHN SMITH'),
    (3, 'PACKAGE3', 'JAVA', 150.00, 200.00, 'IN PROGRESS','ROBERT ANDERSON'),
    (4, 'PACKAGE4', 'PASCAL', 120.00, 100.00, 'COMPLETED','DAVID WILSON'),
    (5, 'PACKAGE5', 'C++', 180.00, 220.00, 'IN PROGRESS','EMILY JOHNSON')

-- INSERTING DATA INTO PROGRAMMER TABLE
INSERT INTO PROGRAMMER (PROGRAMMERID, PROGRAMMERNAME, AGE, DATEOFBIRTH, COURSE, LANGUAGESKNOWN, GENDER, SOFTWAREID)
VALUES
    (1, 'SAM', 30, '1992-05-10', 'DAP', 'PASCAL, C, JAVA', 'MALE', 1),
    (2, 'JOHN', 25, '1997-12-15', 'DAP', 'C++, JAVA', 'MALE', 2),
    (3, 'EMILY', 28, '1994-09-21', 'DAP', 'C, PYTHON', 'FEMALE', 2),
    (4, 'RAMESH', 35, '1988-03-05', 'DAP', 'C++, PASCAL', 'MALE', 1),
    (5, 'SARAH', 32, '1989-11-02', 'C++', 'JAVA, C#, PYTHON', 'FEMALE', 3)

--TO DISPLY ALL DETAILS OF STUDIES TABLE
SELECT * FROM STUDIES
--TO DISPLY ALL DETAILS OF PROGRAMMER TABLE
SELECT* FROM PROGRAMMER

--QUESTIONS
--1. FIND OUT THE SELLING COST AVG FOR PACKAGES DEVELOPED IN PASCAL.
SELECT AVG(SELLINGCOST) AS [AVER-SELLCOST] FROM STUDIES WHERE [LANGUAGE]='PASCAL';
--2. DISPLAY NAMES, AGES OF ALL PROGRAMMERS.
SELECT PROGRAMMERNAME,AGE FROM PROGRAMMER
--3. DISPLAY THE NAMES OF THOSE WHO HAVE DONE THE DAP COURSE.
SELECT PROGRAMMERNAME FROM PROGRAMMER WHERE COURSE='DAP'
--4. Display the Names and Date of Births of all Programmers Born in January.SELECT PROGRAMMERNAME,DATEOFBIRTH FROM PROGRAMMER WHERE FORMAT(DATEOFBIRTH,'MMM')='JAN'
--5. DISPLAY THE DETAILS OF THE SOFTWARE DEVELOPED BY RAMESH.
SELECT* FROM PROGRAMMER WHERE PROGRAMMERNAME='RAMESH'
--6. Display the Details of Packages for which Development Cost have been recovered.SELECT * FROM STUDIES WHERE SELLINGCOST> DEVELOPMENTCOST
--7. DISPLAY THE DETAILS OF THE PROGRAMMERS KNOWING C.
SELECT * FROM PROGRAMMER WHERE LANGUAGESKNOWN LIKE '%C%'
--8. WHAT ARE THE LANGUAGES STUDIED BY MALE PROGRAMMERS?
SELECT LANGUAGESKNOWN FROM PROGRAMMER WHERE GENDER='MALE'
--9. DISPLAY THE DETAILS OF THE PROGRAMMERS WHO JOINED BEFORE 1990.
SELECT* FROM PROGRAMMER WHERE YEAR(DATEOFBIRTH) <1990
--10. WHO ARE THE AUTHORS OF THE PACKAGES, WHICH HAVE RECOVERED MORE THAN DOUBLE THE DEVELOPMENT COST?
SELECT AUTHOR FROM PROGRAMMER JOIN STUDIES ON SOFTWAREID=PACKAGEID WHERE SELLINGCOST= 2*DEVELOPMENTCOST